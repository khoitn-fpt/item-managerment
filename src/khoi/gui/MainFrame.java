/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package khoi.gui;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khoi.dao.ItemDAO;
import khoi.dao.SupplierDAO;
import khoi.dto.ItemDTO;
import khoi.dto.SupplierDTO;

/**
 *
 * @author Nguyen Khoi
 */
public class MainFrame extends javax.swing.JDialog {

    /**
     * Creates new form MainFrame
     */
    boolean addNewS = false;
    boolean addNewI = false;

    public MainFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            DefaultTableModel model = (DefaultTableModel) tableS.getModel();
            SupplierDAO sup = new SupplierDAO();
            List<SupplierDTO> list = sup.getAllSup();
            for (SupplierDTO o : list) {
                model.addRow(new Object[]{o.getSupCode(), o.getSupName(), o.getAddress(), o.isCollaborating()});
            }
            DefaultTableModel model1 = (DefaultTableModel) tableI.getModel();
            ItemDAO item = new ItemDAO();
            List<ItemDTO> list1 = item.getAllItem();

            for (ItemDTO o : list1) {
                model1.addRow(new Object[]{o.getItemCode(), o.getItemName(),
                    o.getUnit(), o.getPrice(), o.isSupplying(), o.getSupCode()});
            }
            loadSupplier();
        } catch (Exception e) {
        }
    }

    void loadSupplier() throws Exception {
        cbxSupplier.removeAllItems();
        SupplierDAO s = new SupplierDAO();
        List<SupplierDTO> data = s.getAllSup();
        for (SupplierDTO sup : data) {
            String i = sup.getSupCode();
            cbxSupplier.addItem(i);
        }
    }

    void newSupplier() {
        this.txtSupCode.setText("");
        this.txtSupName.setText("");
        this.txtSupAddress.setText("");
        this.chbSupCollborating.setText("");
        this.txtSupCode.setEditable(true);
        this.txtSupCode.requestFocus();

    }

    void newItem() {
        this.txtItemCode.setText("");
        this.txtItemCode.setEditable(true);
        this.txtItemCode.requestFocus();
        this.txtItemName.setText("");
        cbxSupplier.getSelectedItem();
        this.txtItemUnit.setText("");
        this.txtItemPrice.setText("");
        chbItemSupplying.setEnabled(true);
    }

    boolean validSup() {
        String code = txtSupCode.getText().trim();
        String Name = txtSupName.getText().trim();
        String Address = txtSupAddress.getText().trim();
        if (code.isEmpty()) {
            JOptionPane.showMessageDialog(this, "code not empty!");
            return false;
        }
        if (!code.matches("\\w{3}")) {
            JOptionPane.showMessageDialog(this, "code must be 3 character and not digit!");
            return false;
        }
        if (Name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name not empty!");
            return false;
        }
        if (Address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Address not empty!");
            return false;
        }
        return true;
    }

    boolean validItem() {
        String iCode = txtItemCode.getText().trim();
        String iName = txtItemName.getText().trim();
        String iUnit = txtItemUnit.getText().trim();
        float iPrice = Float.parseFloat(txtItemPrice.getText().trim());
        if (iCode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ItemCode not empty!");
            return false;
        }
        if (iName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ItemName not empty!");
            return false;
        }
        if (iUnit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unit not empty!");
            return false;
        }
        if (iPrice < 0) {
            JOptionPane.showMessageDialog(this, "Price not < 0 !!!");
            return false;
        }
        if (iPrice > 1000000000) {
            JOptionPane.showMessageDialog(this, "Price too  large");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableS = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSupCode = new javax.swing.JTextField();
        txtSupName = new javax.swing.JTextField();
        txtSupAddress = new javax.swing.JTextField();
        chbSupCollborating = new javax.swing.JCheckBox();
        btnSupAddnew = new javax.swing.JButton();
        btnSupSave = new javax.swing.JButton();
        btnSupDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableI = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnItemAddnew = new javax.swing.JButton();
        btnItemSave = new javax.swing.JButton();
        btnItemDelete = new javax.swing.JButton();
        txtItemCode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        txtItemUnit = new javax.swing.JTextField();
        cbxSupplier = new javax.swing.JComboBox<>();
        txtItemPrice = new javax.swing.JTextField();
        chbItemSupplying = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Address", "Collborating"
            }
        ));
        tableS.getTableHeader().setResizingAllowed(false);
        tableS.getTableHeader().setReorderingAllowed(false);
        tableS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableS);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        jLabel1.setText("Code");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        jLabel4.setText("Collborating");

        btnSupAddnew.setText("Addnew");
        btnSupAddnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupAddnewActionPerformed(evt);
            }
        });

        btnSupSave.setText("Save");
        btnSupSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupSaveActionPerformed(evt);
            }
        });

        btnSupDelete.setText("Delete");
        btnSupDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupDeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 255, 51));
        jLabel5.setText("Welcome to Item Manager, KhoiTNSE141108");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnSupAddnew)
                        .addGap(63, 63, 63)
                        .addComponent(btnSupSave, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSupDelete)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSupCode, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(txtSupName)
                                .addComponent(txtSupAddress))
                            .addComponent(chbSupCollborating))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 32, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(31, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtSupAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(chbSupCollborating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupAddnew)
                    .addComponent(btnSupSave)
                    .addComponent(btnSupDelete))
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Supplier", jPanel1);

        tableI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Unit", "Price", "Supplying", "Supplying"
            }
        ));
        tableI.getTableHeader().setResizingAllowed(false);
        tableI.getTableHeader().setReorderingAllowed(false);
        tableI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableIMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableI);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jLabel6.setText("Item Code");

        jLabel7.setText("Item Name");

        jLabel8.setText("Supplier");

        jLabel9.setText("Unit");

        jLabel10.setText("Price");

        jLabel11.setText("Supplying");

        btnItemAddnew.setText("Addnew");
        btnItemAddnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemAddnewActionPerformed(evt);
            }
        });

        btnItemSave.setText("Save");
        btnItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemSaveActionPerformed(evt);
            }
        });

        btnItemDelete.setText("Delete");
        btnItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemDeleteActionPerformed(evt);
            }
        });

        cbxSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbItemSupplying)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtItemCode)
                        .addComponent(txtItemName)
                        .addComponent(txtItemUnit)
                        .addComponent(cbxSupplier, 0, 240, Short.MAX_VALUE)
                        .addComponent(txtItemPrice)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnItemAddnew)
                .addGap(75, 75, 75)
                .addComponent(btnItemSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(btnItemDelete)
                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbxSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtItemUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(chbItemSupplying))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnItemAddnew)
                    .addComponent(btnItemSave)
                    .addComponent(btnItemDelete))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Item", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSupAddnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupAddnewActionPerformed
        this.txtSupCode.setText("");
        this.txtSupName.setText("");
        this.txtSupAddress.setText("");
        this.chbSupCollborating.setText("");
        this.txtSupCode.setEditable(true);
        this.txtSupCode.requestFocus();
        tableS.setEnabled(false);
        addNewS = true;
    }//GEN-LAST:event_btnSupAddnewActionPerformed

    private void btnSupSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupSaveActionPerformed
        try {
            String code = txtSupCode.getText().toUpperCase().trim();
            String name = txtSupName.getText().trim();
            String address = txtSupAddress.getText().trim();
            boolean collborating = chbSupCollborating.isSelected();
            DefaultTableModel model = (DefaultTableModel) tableS.getModel();
            SupplierDAO s = new SupplierDAO();
            if (validSup()) {
                if (addNewS) {
                    s.saveSup(code, name, address, collborating);
                    while (model.getRowCount() != 0) {
                        model.removeRow(0);
                    }
                    List<SupplierDTO> list = s.getAllSup();
                    for (SupplierDTO o : list) {
                        model.addRow(new Object[]{o.getSupCode(), o.getSupName(),
                            o.getAddress(), o.isCollaborating()});
                    }
                    loadSupplier();
                    addNewS = false;
                } else {
                    s.updateSup(code, name, address, collborating);
                    while (model.getRowCount() != 0) {
                        model.removeRow(0);
                    }
                    List<SupplierDTO> list = s.getAllSup();
                    for (SupplierDTO o : list) {
                        model.addRow(new Object[]{o.getSupCode(), o.getSupName(),
                            o.getAddress(), o.isCollaborating()});
                    }
                    loadSupplier();
                    JOptionPane.showMessageDialog(this, "Update successful!!!");
                    addNewS = false;
                    return;
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Input error!!!!");
        }
    }//GEN-LAST:event_btnSupSaveActionPerformed

    private void btnSupDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupDeleteActionPerformed
        try {
            int r = JOptionPane.showConfirmDialog(this, "Do you want to remove?",
                    "Remove?", JOptionPane.YES_OPTION);
            DefaultTableModel model = (DefaultTableModel) tableS.getModel();
            if (r == JOptionPane.YES_OPTION) {

                int row = tableS.getSelectedRow();
                String supCode = tableS.getValueAt(row, 0).toString();
                SupplierDAO s = new SupplierDAO();
                List<SupplierDTO> list = s.getAllSup();
                try {
                    s.deleteSup(supCode);
                    while (model.getRowCount() != 0) {
                        model.removeRow(0);
                    }
                    list = s.getAllSup();
                    for (SupplierDTO o : list) {
                        model.addRow(new Object[]{o.getSupCode(), o.getSupName(),
                            o.getAddress(), o.isCollaborating()});
                    }
                    newSupplier();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "You must delete item before delete suppliers!");
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please Click a row on table to delete!!! ");
        }
    }//GEN-LAST:event_btnSupDeleteActionPerformed

    private void tableSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSMouseClicked
        try {
            int row = tableS.getSelectedRow();
            txtSupCode.setText(tableS.getValueAt(row, 0).toString().trim());
            this.txtSupCode.setEditable(false);
            txtSupName.setText(tableS.getValueAt(row, 1).toString().trim());
            txtSupAddress.setText(tableS.getValueAt(row, 2).toString().trim());
            chbSupCollborating.setSelected((boolean) tableS.getValueAt(row, 3));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error!!!");
        }
    }//GEN-LAST:event_tableSMouseClicked

    private void btnItemAddnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemAddnewActionPerformed
        this.txtItemCode.setText("");
        this.txtItemCode.setEditable(true);
        this.txtItemCode.requestFocus();
        this.txtItemName.setText("");
        cbxSupplier.getSelectedItem();
        this.txtItemUnit.setText("");
        this.txtItemPrice.setText("");
        chbItemSupplying.setEnabled(true);
        addNewI = true;
    }//GEN-LAST:event_btnItemAddnewActionPerformed

    private void btnItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemSaveActionPerformed
        try {

            String iCode = txtItemCode.getText().trim();
            String iName = txtItemName.getText().trim();
            String iUnit = txtItemUnit.getText().trim();
            float iPrice = Float.parseFloat(txtItemPrice.getText().trim());
            boolean iSupplying = chbItemSupplying.isSelected();
            String sCode = cbxSupplier.getSelectedItem().toString();
            DefaultTableModel modelI = (DefaultTableModel) tableI.getModel();
            ItemDAO i = new ItemDAO();
            if (validItem()) {
                if (addNewI) {
                    i.saveItem(iCode, iName, iUnit, iPrice, iSupplying, sCode);
                    while (modelI.getRowCount() != 0) {
                        modelI.removeRow(0);
                    }
                    List<ItemDTO> list = i.getAllItem();
                    for (ItemDTO o : list) {
                        modelI.addRow(new Object[]{o.getItemCode(), o.getItemName(),
                            o.getUnit(), o.getPrice(), o.isSupplying(), o.getSupCode()});
                    }
                    newItem();
                    addNewI=false;
                } else {
                    i.updateItem(iCode, iName, iUnit, iPrice, iSupplying, sCode);
                    while (modelI.getRowCount() != 0) {
                        modelI.removeRow(0);
                    }
                    List<ItemDTO> list = i.getAllItem();
                    for (ItemDTO o : list) {
                        modelI.addRow(new Object[]{o.getItemCode(), o.getItemName(),
                            o.getUnit(), o.getPrice(), o.isSupplying(), o.getSupCode()});
                    }
                    newItem();
                    JOptionPane.showMessageDialog(this, "Update successful!!!");
                    addNewI=false;
                    return;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Input error!!!!!!");
        }

    }//GEN-LAST:event_btnItemSaveActionPerformed

    private void btnItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemDeleteActionPerformed
        try {
            int r = JOptionPane.showConfirmDialog(this, "Do you want to remove?",
                    "Remove?", JOptionPane.YES_OPTION);
            DefaultTableModel modelI = (DefaultTableModel) tableI.getModel();
            if (r == JOptionPane.YES_OPTION) {
                int row = tableI.getSelectedRow();
                String Code = txtItemCode.getText().trim();
                ItemDAO item = new ItemDAO();
                List<ItemDTO> list = item.getAllItem();

                item.deleteItem(Code);
                loadSupplier();
                while (modelI.getRowCount() != 0) {
                    modelI.removeRow(0);
                }
                list = item.getAllItem();
                for (ItemDTO o : list) {
                    modelI.addRow(new Object[]{o.getItemCode(), o.getItemName(),
                        o.getUnit(), o.getPrice(), o.isSupplying(), o.getSupCode()});
                }
                newItem();
                JOptionPane.showMessageDialog(this, "Delete successful!!!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please Click a row on table to delete!!! ");
        }
    }//GEN-LAST:event_btnItemDeleteActionPerformed

    private void tableIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableIMouseClicked
        try {
            int row = tableI.getSelectedRow();
            txtItemCode.setText(tableI.getValueAt(row, 0).toString().trim());
            this.txtItemCode.setEditable(false);
            txtItemName.setText(tableI.getValueAt(row, 1).toString().trim());
            txtItemUnit.setText(tableI.getValueAt(row, 2).toString().trim());
            txtItemPrice.setText(tableI.getValueAt(row, 3).toString().trim());
            chbItemSupplying.setSelected((boolean) tableI.getValueAt(row, 4));

            cbxSupplier.setSelectedItem(tableI.getValueAt(row, 5).toString());

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tableIMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame dialog = new MainFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnItemAddnew;
    private javax.swing.JButton btnItemDelete;
    private javax.swing.JButton btnItemSave;
    private javax.swing.JButton btnSupAddnew;
    private javax.swing.JButton btnSupDelete;
    private javax.swing.JButton btnSupSave;
    private javax.swing.JComboBox<String> cbxSupplier;
    private javax.swing.JCheckBox chbItemSupplying;
    private javax.swing.JCheckBox chbSupCollborating;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tableI;
    private javax.swing.JTable tableS;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtItemUnit;
    private javax.swing.JTextField txtSupAddress;
    private javax.swing.JTextField txtSupCode;
    private javax.swing.JTextField txtSupName;
    // End of variables declaration//GEN-END:variables
}
